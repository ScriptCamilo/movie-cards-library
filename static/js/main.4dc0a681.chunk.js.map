{"version":3,"sources":["components/Header.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","data.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","Rating","rating","this","props","defaultProps","MovieCard","movie","title","subtitle","storyline","imagePath","src","alt","MovieList","movies","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEMA,E,4JACJ,WACE,OACE,wBAAQC,UAAU,oBAAlB,SACE,oBAAIA,UAAU,aAAd,kCAGL,K,GAPkBC,aAUNF,ICTTG,E,4JACJ,WACE,IAAQC,EAAWC,KAAKC,MAAhBF,OAER,OACE,sBAAMH,UAAU,SAAhB,SAA0BG,GAE7B,K,GAPkBF,aAcrBC,EAAOI,aAAe,CACpBH,OAAQ,GAGKD,QCjBTK,E,4JACJ,WACE,IAAQC,EAAUJ,KAAKC,MAAfG,MACAC,EAAkDD,EAAlDC,MAAOC,EAA2CF,EAA3CE,SAAUC,EAAiCH,EAAjCG,UAAWR,EAAsBK,EAAtBL,OAAQS,EAAcJ,EAAdI,UAE5C,OACE,oBAAIZ,UAAU,aAAd,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAd,SAAkCS,IAClC,oBAAIT,UAAU,sBAAd,SAAqCU,IACrC,qBACEV,UAAU,mBACVa,IAAMD,EACNE,IAAML,IAER,mBAAGT,UAAU,uBAAb,SAAqCW,IACrC,cAAC,EAAD,CAAQR,OAASA,QAIxB,K,GApBqBF,aAiCTM,IChCTQ,E,4JACJ,WACE,IAAQC,EAAWZ,KAAKC,MAAhBW,OAER,OACE,oBAAIhB,UAAU,aAAd,SACGgB,EAAOC,KAAI,SAACT,GAAD,OAAW,cAAC,EAAD,CAA+BA,MAAQA,GAAtBA,EAAMC,MAAlC,KAGjB,K,GATqBR,aAgBTc,ICiBAC,EAtCA,CACb,CACEP,MAAO,cACPC,SAAU,mBACVC,UAAW,iKACXR,OAAQ,IACRS,UAAW,2CAEb,CACEH,MAAO,gBACPC,SAAU,iBACVC,UAAW,4HACXR,OAAQ,IACRS,UAAW,2CAEb,CACEH,MAAO,qBACPC,SAAU,qBACVC,UAAW,qJACXR,OAAQ,EACRS,UAAW,qCAEb,CACEH,MAAO,kBACPC,SAAU,kBACVC,UAAW,2LACXR,OAAQ,IACRS,UAAW,8BAEb,CACEH,MAAO,gBACPC,SAAU,WACVC,UAAW,iKACXR,OAAQ,IACRS,UAAW,sCC1BTM,G,kKACJ,WACE,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWgB,OAAQA,MAGxB,K,GARef,cAWHiB,ICPAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECJDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.4dc0a681.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends Component {\n  render() {\n    const { rating } = this.props;\n\n    return (\n      <span className=\"rating\">{rating}</span>\n    );\n  }\n}\n\nRating.propTypes = {\n  rating: PropTypes.number,\n};\n\nRating.defaultProps = {\n  rating: 3,\n};\n\nexport default Rating;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n\n    return (\n      <li className=\"movie-card\">\n        <div className=\"movie-card-body\">\n          <h4 className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <img\n            className=\"movie-card-image\"\n            src={ imagePath }\n            alt={ title }\n          />\n          <p className=\"movie-card-storyline\">{storyline}</p>\n          <Rating rating={ rating } />\n        </div>\n      </li>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <ul className=\"movie-list\">\n        {movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />)}\n      </ul>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieList;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: 'King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire\\'s plans to steal the sacred crystal.',\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: 'A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human\\'s future hope, the legendary city of Olympus.',\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n  },\n];\n\nexport default movies;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport MovieList from './components/MovieList';\n\nimport movies from './data';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <MovieList movies={movies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}